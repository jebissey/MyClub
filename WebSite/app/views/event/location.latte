<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recherche d'adresse avec carte</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.1/font/bootstrap-icons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" />
    <style>
        #map {
            height: 500px;
            width: 100%;
            border-radius: 0.375rem;
        }
        .card {
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        body {
            padding-top: 20px;
            padding-bottom: 20px;
        }
        #copyCloseBtn {
            display: none;
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }
        .toast-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1100;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row mb-4">
            <div class="col">
                <h1 class="text-center mb-4">Recherche d'adresse avec carte</h1>
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">Entrez une adresse</h5>
                    </div>
                    <div class="card-body">
                        <div class="input-group mb-3">
                            <input type="text" id="address" class="form-control" placeholder="Entrez une adresse" aria-label="Adresse">
                            <button class="btn btn-primary" type="button" id="search-btn">
                                <i class="bi bi-search"></i> Rechercher
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">Carte</h5>
                    </div>
                    <div class="card-body p-0">
                        <div id="map"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">Détails de l'adresse</h5>
                    </div>
                    <div class="card-body">
                        <div id="address-details" class="alert alert-info">
                            Les détails de l'adresse apparaîtront ici après une recherche...
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <button id="copyCloseBtn" class="btn btn-success btn-lg rounded-circle shadow">
        <i class="bi bi-clipboard-check"></i>
    </button>

    <div class="toast-container">
        <div id="copyToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="bi bi-check-circle-fill me-2"></i> Adresse copiée dans le presse-papier!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js"></script>
    <script n:syntax="off">
        let currentAddress = "";
        const copyCloseBtn = document.getElementById('copyCloseBtn');
        const copyToast = document.getElementById('copyToast');
        const toast = new bootstrap.Toast(copyToast, { delay: 2000 });
        const addressInput = document.getElementById('address');
        const searchBtn = document.getElementById('search-btn');

        const map = L.map('map').setView([48.856614, 2.3522219], 13); // Paris par défaut
        
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        
        let marker;
        
        function getUrlParams() {
            const params = {};
            const queryString = window.location.search.substring(1);
            const pairs = queryString.split('&');
            
            for (const pair of pairs) {
                const [key, value] = pair.split('=');
                if (key && value) {
                    params[decodeURIComponent(key)] = decodeURIComponent(value.replace(/\+/g, ' '));
                }
            }
            
            return params;
        }
        
        async function geocodeAddress(address) {
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}&limit=1&addressdetails=1`);
                const data = await response.json();
                
                if (data.length > 0) {
                    return data[0];
                } else {
                    throw new Error("Adresse non trouvée");
                }
            } catch (error) {
                console.error("Erreur lors de la géolocalisation:", error);
                throw error;
            }
        }
        
        function updateMap(result) {
            currentAddress = result.display_name;
            copyCloseBtn.style.display = "block";
            const lat = parseFloat(result.lat);
            const lon = parseFloat(result.lon);
            
            map.setView([lat, lon], 16);
            
            if (marker) {
                map.removeLayer(marker);
            }
            
            marker = L.marker([lat, lon]).addTo(map);
            marker.bindPopup(result.display_name).openPopup();
            
            const addressDetails = document.getElementById('address-details');
            addressDetails.className = "mt-3"; // Supprime alert-info pour styles personnalisés
            
            let addressHTML = `
                <div class="card mb-3">
                    <div class="card-header bg-success text-white">Adresse trouvée</div>
                    <div class="card-body">
                        <h5 class="card-title">${result.display_name}</h5>
                        <p class="card-text"><strong>Type:</strong> ${result.type || 'Non spécifié'}</p>
                        <p class="card-text"><strong>Coordonnées:</strong> Latitude: ${lat}, Longitude: ${lon}</p>
                    </div>
                </div>`;
            
            if (result.address) {
                addressHTML += `
                <div class="card">
                    <div class="card-header bg-info text-white">Détails complémentaires</div>
                    <div class="card-body p-0">
                        <table class="table table-striped table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Élément</th>
                                    <th>Valeur</th>
                                </tr>
                            </thead>
                            <tbody>`;
                
                for (const [key, value] of Object.entries(result.address)) {
                    addressHTML += `
                                <tr>
                                    <td>${key}</td>
                                    <td>${value}</td>
                                </tr>`;
                }
                
                addressHTML += `
                            </tbody>
                        </table>
                    </div>
                </div>`;
            }
            
            addressDetails.innerHTML = addressHTML;
        }

        function copyAddressAndClose() {
            if (currentAddress) {
                navigator.clipboard.writeText(currentAddress)
                    .then(() => {
                        toast.show();
                        setTimeout(() => {
                            window.close();
                        }, 1500);
                    })
                    .catch(err => {
                        console.error('Erreur lors de la copie: ', err);
                        alert("Impossible de copier l'adresse. Erreur: " + err);
                    });
            }
        }
        
        async function performSearch() {
            const address = addressInput.value.trim();
            const addressDetails = document.getElementById('address-details');
            
            if (address) {
                try {
                    copyCloseBtn.style.display = "none";
                    addressDetails.className = "alert alert-info";
                    addressDetails.innerHTML = '<div class="d-flex align-items-center"><strong>Recherche en cours...</strong><div class="spinner-border ms-auto text-primary" role="status" aria-hidden="true"></div></div>';
                    
                    const result = await geocodeAddress(address);
                    updateMap(result);
                } catch (error) {
                    addressDetails.className = "alert alert-danger";
                    addressDetails.innerHTML = "<strong>Erreur:</strong> Impossible de trouver cette adresse. Veuillez réessayer.";
                    copyCloseBtn.style.display = "none";
                }
            } else {
                addressDetails.className = "alert alert-warning";
                addressDetails.innerHTML = "<strong>Attention:</strong> Veuillez entrer une adresse avant de lancer la recherche.";
                copyCloseBtn.style.display = "none";
            }
        }
        
        searchBtn.addEventListener('click', performSearch);
        
        addressInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                searchBtn.click();
            }
        });
        
        copyCloseBtn.addEventListener('click', copyAddressAndClose);
        document.addEventListener('DOMContentLoaded', function() {
            const params = getUrlParams();
            
            if (params.address) {
                addressInput.value = params.address;
                setTimeout(() => {
                    searchBtn.click();
                }, 500); // Petit délai pour s'assurer que tout est chargé
            }
        });
    </script>
</body>
</html>