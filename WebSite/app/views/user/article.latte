{layout '../layout.latte'}

{block title}Articles{/block}

{block navbar}
    {include '../navbar/home.latte'}
{/block}

{block head}
    {if $canEdit}
        <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
        <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
        <style>
            .ql-editor {
                min-height: 300px;
            }
            #editor-container {
                display: none;
            }
            .card-body img {
                max-width: 100%;
                height: auto;
                display: block;
                margin: 0 auto;
            }
        </style>
    {/if}
{/block}

{block content}
    <div class="container">
        {if isset($messages['success'])}
            <div class="alert alert-success alert-dismissible">
                {$messages['success']}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {/if}
        {if isset($messages['error'])}
            <div class="alert alert-danger alert-dismissible">
                {$messages['error']}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {/if}

        {if $chosenArticle}
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="card-title" id="article-title-display">{$chosenArticle->Title}</h2>
                        <small class="text-muted">
                            Publié par {$chosenArticle->FirstName} {$chosenArticle->LastName} 
                            le {date('d/m/Y', strtotime($chosenArticle->Timestamp))}
                        </small>
                    </div>
                    {if $canEdit}
                        <button id="edit-toggle-btn" class="btn btn-primary">Modifier</button>
                        <button id="save-btn" class="btn btn-success" style="display: none;">Enregistrer</button>
                        <button id="cancel-btn" class="btn btn-secondary" style="display: none;">Annuler</button>
                    {/if}
                </div>
                <div class="card-body">
                    <div id="content-display">
                        {$chosenArticle->Content|noescape}
                    </div>
                    
                    {if $canEdit}
                        <div id="editor-container">
                            <form id="edit-form" method="post">
                                <div class="mb-3">
                                    <label for="title-input" class="form-label">Titre</label>
                                    <input type="text" class="form-control" id="title-input" name="title" value="{$chosenArticle->Title}">
                                </div>
                                <div class="mb-3">
                                    <label for="quill-editor" class="form-label">Contenu</label>
                                    <div id="quill-editor"></div>
                                    <input type="hidden" name="content" id="content-input">
                                </div>
                            </form>
                        </div>
                    {/if}
                </div>
            </div>
        {else}
            <div class="alert alert-info">
                Aucun article disponible.
            </div>
        {/if}
        
        {if count($latestArticleTitles) > 0}
            <h3>Articles récents</h3>
            <ul class="list-group">
                {foreach $latestArticleTitles as $article}
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <a href="/article/{$article->Id}">{$article->Title}</a>
                        <span class="badge bg-secondary rounded-pill">
                            {date('d/m/Y', strtotime($article->Timestamp))}
                        </span>
                    </li>
                {/foreach}
            </ul>
        {/if}
    </div>
{/block}

{block scripts}
    {if $canEdit}
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var quill = new Quill('#quill-editor', {
                    theme: 'snow',
                    modules: {
                        toolbar: [
                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                            ['bold', 'italic', 'underline', 'strike'],
                            [{ 'color': [] }, { 'background': [] }],
                            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                            ['link', 'image'],
                            ['clean']
                        ]
                    }
                });
                
                var contentDisplay = document.getElementById('content-display');
                var initialContent = contentDisplay.innerHTML;
                
                quill.clipboard.dangerouslyPasteHTML(initialContent);
                
                var editToggleBtn = document.getElementById('edit-toggle-btn');
                var saveBtn = document.getElementById('save-btn');
                var cancelBtn = document.getElementById('cancel-btn');
                var editorContainer = document.getElementById('editor-container');
                var titleDisplay = document.getElementById('article-title-display');
                var titleInput = document.getElementById('title-input');
                var editForm = document.getElementById('edit-form');
                var contentInput = document.getElementById('content-input');
                
                editToggleBtn.addEventListener('click', function() {
                    contentDisplay.style.display = 'none';
                    editorContainer.style.display = 'block';
                    editToggleBtn.style.display = 'none';
                    saveBtn.style.display = 'inline-block';
                    cancelBtn.style.display = 'inline-block';
                    titleDisplay.style.display = 'none';
                });
                
                saveBtn.addEventListener('click', function() {
                    var content = quill.root.innerHTML;
                    contentInput.value = content;
                    
                    editForm.submit();
                });
                
                cancelBtn.addEventListener('click', function() {
                    contentDisplay.style.display = 'block';
                    editorContainer.style.display = 'none';
                    editToggleBtn.style.display = 'inline-block';
                    saveBtn.style.display = 'none';
                    cancelBtn.style.display = 'none';
                    titleDisplay.style.display = 'block';
                    
                    quill.clipboard.dangerouslyPasteHTML(initialContent);
                    titleInput.value = titleDisplay.textContent;
                });

                quill.getModule("toolbar").addHandler("image", function () {
                    const input = document.createElement("input");
                    input.setAttribute("type", "file");
                    input.setAttribute("accept", "image/*");
                    input.click();

                    input.onchange = async function () {
                        const file = input.files[0];
                        if (file) {
                            const resizedImage = await resizeImage(file);
                            const range = quill.getSelection();
                            quill.insertEmbed(range.index, "image", resizedImage);
                        }
                    };
                });
            });

            function resizeImage(file, maxWidth = 1280, maxHeight = 1280) {
                return new Promise((resolve) => {
                    const img = new Image();
                    const reader = new FileReader();

                    reader.onload = (e) => {
                        img.src = e.target.result;
                    };

                    img.onload = () => {
                        let { width, height } = img;

                        if (width > maxWidth || height > maxHeight) {
                            const canvas = document.createElement("canvas");
                            const ctx = canvas.getContext("2d");

                            const scale = Math.min(maxWidth / width, maxHeight / height);
                            width = Math.round(width * scale);
                            height = Math.round(height * scale);

                            canvas.width = width;
                            canvas.height = height;
                            ctx.drawImage(img, 0, 0, width, height);

                            resolve(canvas.toDataURL("image/jpeg", 0.9));
                        } else {
                            resolve(img.src);
                        }
                    };
                    reader.readAsDataURL(file);
                });
            }
        </script>
    {/if}
{/block}